1.Импортиране на библиотеката Scanner:
  Програмата използва Scanner за въвеждане на данни от потребителя.
2.Четене на входни стойности:
  Потребителят въвежда:
    Час и минути на започване на изпита (например 9:30).
    Час и минути на пристигане на студента (например 9:15).
3.Преобразуване на времето в минути:
  За по-лесно изчисление на разликите във времето, както за изпита, така и за пристигането, преобразуваме и двете времена в минути:
    Пример: 9 часа и 30 минути = (9 * 60) + 30 = 570 минути.
4.Изчисляване на разликата във времето:
  Изчислява се разликата между времето на пристигане и времето на изпита.
    Ако резултатът е отрицателен (например -15 минути), студентът е пристигнал по-рано.
    Ако разликата е положителна (например 10 минути), студентът е закъснял.
    Ако разликата е 0, студентът е пристигнал точно на време.
5.Определяне на статуса на пристигането:
  Програмата анализира дали студентът е:
    Ранен (Early): Ако е пристигнал повече от 30 минути преди изпита.
    Точно на време (On time): Ако е пристигнал в диапазона между 0 и 30 минути преди изпита.
    Закъснял (Late): Ако е пристигнал след началото на изпита.
6.Форматиране на времето за изписване:
  Ако студентът е ранен или закъснял, програмата форматира разликата във времето по ясен и разбираем начин:
    Минути: Ако разликата е по-малка от 60 минути.
    Часове и минути: Ако разликата е по-голяма от 60 минути (например 1:15 часа).
7.Извеждане на резултата:
  Програмата извежда статуса на пристигането:
    Ако студентът е ранен, ще изведе съобщение с времето, което е преди изпита.
    Ако студентът е закъснял, ще изведе съобщение с времето, което е след началото на изпита.
    Ако студентът е на време, ще изведе съобщение „On time“ и, ако има разлика във времето, ще покаже колко минути преди началото е пристигнал.Затваряне на скенера:
8.Затваряне на скенера:
  За да се предотвратят течове на ресурси, програмата затваря обекта scanner след като завърши четенето на входните данни.
